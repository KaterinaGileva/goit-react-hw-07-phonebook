{"version":3,"file":"static/js/803.d95b2939.chunk.js","mappings":"wOACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4BAA3F,EAA+H,2BAA/H,EAAoK,6B,wCCOrJ,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAGHC,GAAYC,EAAAA,EAAAA,MAAlBC,KACR,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOf,MACnB,IAAK,OACHC,EAAQa,EAAMC,OAAOC,OACrB,MAEA,IAAK,QACHb,EAASW,EAAMC,OAAOC,OACtB,MAEJ,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMD,GAAN,4EACnBA,EAAME,iBAEAC,EAAiBnB,EAAKoB,cACtBC,EAAmBb,EAAQc,MAC/B,SAAAd,GAAO,OAAIA,EAAQR,KAAKoB,gBAAkBD,CAAnC,KAGLE,EARe,uBASjBE,EAAAA,GAAAA,KAAA,UAAcvB,EAAd,4BAA8C,CAC5CwB,SAAUD,EAAAA,GAAAA,SAAAA,aAVK,oDAeTX,EAAW,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAfjB,QAgBfmB,EAAAA,GAAAA,QAAA,UAAiBvB,EAAjB,wBAA6C,CAC3CwB,SAAUD,EAAAA,GAAAA,SAAAA,YAjBG,kDAoBfA,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAUD,EAAAA,GAAAA,SAAAA,WAEZE,QAAQC,IAAR,MAvBe,QA2BnBzB,EAAQ,IACRE,EAAS,IAhDaG,EAAS,KAoBZ,0DAAH,sDAgCZ,OACG,kBAAMqB,UAAWC,EAAUC,SAAUZ,EAArC,WACC,8BACC,kBACCa,KAAK,WACLC,QAAS3B,EACT4B,SAAU,kBAAM3B,GAAaD,EAAnB,IAJZ,uBASG,mBAAOuB,UAAWC,EAAlB,kBAEE,kBACEE,KAAK,OACL9B,KAAK,OACLgB,MAAOhB,EACP2B,UAAWC,EACZI,SAAUnB,EACToB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOR,UAAWC,EAAlB,oBAEE,kBACEE,KAAK,MACL9B,KAAK,SACLgB,MAAOd,EACPyB,UAAWC,EACXI,SAAUnB,EACVoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGf,mBAAQL,KAAK,SAASH,UAAWC,EAAjC,2BAGF,CCvGK,SAASQ,IACtB,OACE,2BACG,SAACtC,EAAD,KAGN,C,uBCRD,SAASuC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB5B,EAAQ6B,EAAK7B,KAInB,CAHE,MAAO8B,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQvB,GAERgC,QAAQT,QAAQvB,GAAOiC,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMzB,GACbqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ1B,EAClE,CACA,SAAS0B,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/NewContact/NewContact.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"name\":\"ContactForm_name__ZqciK\",\"number\":\"ContactForm_number__RyoZN\",\"input\":\"ContactForm_input__Bl93P\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useState } from 'react';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useAddContactMutation, useGetContactsQuery } \nfrom 'redux/contactsSliceApi';\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [personal, setPersonal] = useState(true);\n  const navigate = useNavigate();\n  const closeForm = () => navigate('/');\n   \n  const { data: contact } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n        case 'phone':\n          setPhone(event.target.value);\n          break;\n\n      default:\n        return;\n    }\n  };\n  \n  const handleSubmit = async value => {\n    value.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    const availableContact = contact.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (availableContact) {\n      toast.info(`${name} is already in contacts!`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    } else {\n      try {\n        await addContact({ name, phone, personal });\n        toast.success(`${name} successfully added!`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      } catch (error) {\n        toast.error('Error adding data!', {\n          position: toast.POSITION.TOP_LEFT,\n        });\n        console.log(error);\n      }\n    }\n\n    setName('');\n    setPhone('');\n    closeForm(false);\n  };\n\n        return (\n           <form className={css.form} onSubmit={handleSubmit}>\n            <label>\n             <input\n              type=\"checkbox\"\n              checked={personal}\n              onChange={() => setPersonal(!personal)}\n              />\n              Personal contact\n            </label>\n               \n               <label className={css.name} >\n                 Name\n                 <input\n                   type=\"text\"\n                   name='name'\n                   value={name}\n                   className={css.input}\n                  onChange={handleChange}     \n                   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                   required\n                 /> \n               </label> \n               <label className={css.number} >\n                  Number \n                 <input\n                   type=\"tel\"\n                   name='number'\n                   value={phone}\n                   className={css.input}\n                   onChange={handleChange}\n                   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                   title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                   required\n               />\n               </label>\n            <button type=\"submit\" className={css.formBtn}>Add contact</button>\n       </form>\n           );\n         }","import ContactForm from '../../components/ContactForm/ContactForm';\n\nexport default function EditContact () {\n  return (\n    <main>\n       <ContactForm />\n    </main>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["ContactForm","useState","name","setName","phone","setPhone","personal","setPersonal","navigate","useNavigate","contact","useGetContactsQuery","data","useAddContactMutation","addContact","handleChange","event","target","value","handleSubmit","preventDefault","normalizedName","toLowerCase","availableContact","find","toast","position","console","log","className","css","onSubmit","type","checked","onChange","pattern","title","required","EditContact","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}