{"version":3,"file":"static/js/173.cf11289b.chunk.js","mappings":"sQAIe,SAASA,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SAChD,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACA,GAAwBC,EAAAA,EAAAA,UAASJ,EAAcK,MAA/C,eAAOA,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAASJ,EAAcO,OAAjD,eAAOA,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAASJ,EAAcS,UAAvD,eAAOA,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOR,MACnB,IAAK,OACHC,EAAQM,EAAMC,OAAOC,OACrB,MAEF,IAAK,QACHN,EAASI,EAAMC,OAAOC,OACtB,MAEF,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMD,GAAN,wEACnBA,EAAME,iBADa,kBAIXb,EAAc,CAAEc,GAAIjB,EAAciB,GAAIZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAJxC,sDAMjBS,QAAQC,IAAR,MANiB,OAQnBlB,IARmB,yDAAH,sDAWlB,OACE,kBAAMA,SAAUc,EAAhB,WACE,8BACE,kBACEK,KAAK,WACLC,QAASZ,EACTa,SAAU,kBAAMZ,GAAaD,EAAnB,IAJd,uBAQA,qCAEE,kBACEW,KAAK,OACLf,KAAK,OACLS,MAAOT,EACPiB,SAAUX,EACVY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEL,KAAK,MACLf,KAAK,QACLS,MAAOP,EACPe,SAAUX,EACVY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQL,KAAK,SAAb,2BAGL,CCpEc,SAASM,IACtB,IACMC,GADSC,EAAAA,EAAAA,MACUX,GAEzB,GAAqCY,EAAAA,EAAAA,IAAuBF,EAAW,CACrEG,MAAoB,IAAdH,IADMI,EAAd,EAAQC,KAAeC,EAAvB,EAAuBA,UAIjBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,kBAAMF,EAAS,IAAf,EAMnB,OAEI,iCACE,iEACCH,IACC,SAAChC,EAAD,CACEC,cAAe,CACbiB,GAAIc,EAAQd,GACZZ,KAAM0B,EAAQ1B,KACdE,MAAOwB,EAAQxB,MACfE,SAAUsB,EAAQtB,UAEpBR,SAhBkB,WAC1BmC,GACD,EAeSC,QAASJ,KAGb,mBAAQb,KAAK,SAASkB,QAASF,EAA/B,qBAKP,C,uBC1CD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBhC,EAAQiC,EAAKjC,KAInB,CAHE,MAAOkC,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQ3B,GAERoC,QAAQT,QAAQ3B,GAAOqC,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAM7B,GACbyB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ9B,EAClE,CACA,SAAS8B,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/EditForm/EditForm.jsx","pages/EditContact/EditContact.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState } from 'react';\nimport { useUpdateContactMutation } from '../../redux/contactsSliceApi';\n\n\nexport default function EditForm({ initialValues, onSubmit }) {\n  const [updateContact] = useUpdateContactMutation();\n  const [name, setName] = useState(initialValues.name);\n  const [phone, setPhone] = useState(initialValues.phone);\n  const [personal, setPersonal] = useState(initialValues.personal);\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'phone':\n        setPhone(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async value => {\n    value.preventDefault();\n\n    try {\n      await updateContact({ id: initialValues.id, name, phone, personal });\n    } catch (error) {\n      console.log(error);\n    }\n    onSubmit();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={personal}\n          onChange={() => setPersonal(!personal)}\n        />\n        Personal contact\n      </label>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Save change</button>\n    </form>\n  );\n}","import { useNavigate, useParams } from 'react-router-dom';\nimport { useGetContactByIdQuery } from '../../redux/contactsSliceApi';\n\nimport EditForm from '../../components/EditForm/EditForm';\n\nexport default function EditContact() {\n  const params = useParams();\n  const contactId = params.id;\n  // console.log('contactId in EditContact:', contactId);\n  const { data: contact, isLoading } = useGetContactByIdQuery(contactId, {\n    skip: contactId === false,\n  });\n  // console.log('contactId in EditContact:', contactId);\n  const navigate = useNavigate();\n\n  const closeModal = () => navigate('/');\n\n  const handleUpdateContact = () => {\n    closeModal();\n  };\n\n  return (\n    \n      <>\n        <h1>You can make changes to this contact</h1>\n        {contact && (\n          <EditForm\n            initialValues={{\n              id: contact.id,\n              name: contact.name,\n              phone: contact.phone,\n              personal: contact.personal,\n            }}\n            onSubmit={handleUpdateContact}\n            loading={isLoading}\n          />\n        )}\n        <button type=\"button\" onClick={closeModal}>\n          Close\n        </button>\n        </>\n  );\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["EditForm","initialValues","onSubmit","useUpdateContactMutation","updateContact","useState","name","setName","phone","setPhone","personal","setPersonal","handleChange","event","target","value","handleSubmit","preventDefault","id","console","log","type","checked","onChange","pattern","title","required","EditContact","contactId","useParams","useGetContactByIdQuery","skip","contact","data","isLoading","navigate","useNavigate","closeModal","loading","onClick","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}