{"version":3,"file":"static/js/202.a5e1a57f.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","redux/selectors.js","components/StatusFilter/StatusFilter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonFilter = styled.button`\ndisplay: inline-flex;\n    padding: 8px 12px;\n    border-radius: 4px;\n    border: solid 1px blue;\n    font: inherit;\n    cursor: pointer;\n    background-color: #fff;\n    \n    :hover {\n    background-color: #1565c0;\n    color: #fff;\n    transform: scale(1.02);\n  }\n  \n  :active {\n    background-color: #1565c0;\n    color: #fff;\n    box-shadow: 2px 2px 5px #fc894d;\n  }\n`;\n","import { ButtonFilter } from './Button.styled';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonFilter\n      style={\n        selected === false\n          ? { backgroundColor: ` #fff`, color: `#000` }\n          : { backgroundColor: `#1976d2`, color: `#fff`}\n      }\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </ButtonFilter>\n  );\n};","export const selectFilterValue = state => state.filter.filter;\nexport const selectFilterStatus = state => state.filter.status;\n","import { Button } from 'components/Button/Button';\nimport React from 'react';\n//import css from 'components/Filter/Filter.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { statusFilters } from 'redux/constans';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { selectFilterStatus } from 'redux/selectors';\n\nconst StatusFilter  = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterStatus);\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n   \n  return (\n    <div>\n\n<Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </Button>\n      <Button\n        selected={filter === statusFilters.personal}\n        onClick={() => handleFilterChange(statusFilters.personal)}\n      >\n        Personal\n      </Button>\n      <Button\n        selected={filter === statusFilters.others}\n        onClick={() => handleFilterChange(statusFilters.others)}\n      >\n        Others\n      </Button>\n    </div>\n);\n};\n//Filter.propTypes = {\n//  value: PropTypes.string.isRequired,\n  //onChange: PropTypes.func.isRequired,\n//};\n\nexport default StatusFilter;","import { useDeleteContactMutation } from '../../redux/contactsSliceApi';\nimport { useNavigate } from 'react-router-dom';\nimport { RiFunctionFill } from 'react-icons/ri';\nimport { RiStarSFill } from 'react-icons/ri';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { RiEdit2Fill } from 'react-icons/ri';\n\nexport default function Contact({ name, phone, id, personal }) {\n  // console.log('name:', {name, phone, id})\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  \n  return (\n    <>\n      {personal === false ? (\n        <RiFunctionFill\n          style={{\n            width: 24,\n            height: 24,\n          }}\n        />\n      ) : (\n        <RiStarSFill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n      )}\n\n      <div>\n      <span>{name}</span> :\n      <span>{phone}</span>\n      </div>\n      \n\n\n<button\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isLoading}\n      >\n        <RiDeleteBin5Line\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Delete\n      </button>\n      <button type=\"button\" onClick={() => navigate(`/${id}`)}>\n        <RiEdit2Fill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Edit\n      </button>\n\n    </>\n  );\n}","import PropTypes from 'prop-types';\nimport { selectFilterStatus, selectFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from '..//../redux/contactsSliceApi';\nimport Contact from 'components/Contact/Contact';\n\nexport default function ContactList() {\n  const filterValue = useSelector(selectFilterValue);\n  const filterStatus = useSelector(selectFilterStatus);\n  // console.log(\"filterStatus:\", filterStatus)\n\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n  // console.log('data:', contacts);\n  // console.log('error:', error);\n  // console.log('isLoading:', isLoading);\n\n  let getVisibleContacts = (contacts, filter, status) => {\n    if (contacts)\n      switch (status) {\n        case 'personal':\n          return contacts\n            .filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .filter(contact => contact.personal === true);\n\n        case 'others':\n          return contacts\n            .filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .filter(contact => contact.personal === false);\n\n        default:\n          return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          );\n      }\n  };\n\n  const visibleContacts = getVisibleContacts(\n    contacts,\n    filterValue,\n    filterStatus\n  );\n\n  return (\n    <>\n      {error && <p>Error loading, please try again </p>}\n\n      {isLoading ? (\n        <b>Loading...</b>\n      ) : (\n        <>\n          {visibleContacts.map(({ name, phone, id, personal }) => (\n            <div\n              key={id}\n              style={\n                personal === false\n                  ? { backgroundColor: ` #e1c7e9` }\n                  : { backgroundColor: `#00fff2` }\n              }\n            >\n              <Contact name={name} phone={phone} id={id} personal={personal} />\n            </div>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};","import Filter from '../../components/StatusFilter/StatusFilter';\nimport ContactList from '../../components/ContactList/ContactList';\n\nexport default function Home() {\n  return (\n    <main>\n      <Filter />\n      <h1>Contacts</h1>\n      <ContactList />\n    </main>\n  );\n}"],"names":["ButtonFilter","styled","Button","selected","type","children","otherProps","style","backgroundColor","color","selectFilterValue","state","filter","selectFilterStatus","status","dispatch","useDispatch","useSelector","handleFilterChange","setStatusFilter","statusFilters","onClick","Contact","name","phone","id","personal","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoading","width","height","disabled","ContactList","filterValue","filterStatus","useGetContactsQuery","contacts","data","error","visibleContacts","contact","toLowerCase","includes","getVisibleContacts","map","Home"],"sourceRoot":""}